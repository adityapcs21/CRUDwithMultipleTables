@model PagedList.IPagedList<CRUDWithTwoTables.Models.MultipleClass>
@using PagedList.Mvc;
@{ ViewBag.Title = "Index"; }

@using (Html.BeginForm("AddupdateUserDetails", "Index", FormMethod.Post))
{

<p>
    @Html.ActionLink("Create New", "Create")
</p>
   <div class="container">
    <div class="background-image">
        <div class="col-sm-12 clearfix">
            <table border="1" class="table table-striped">
                <thead>
                    <tr style="color:white; background-color:green">
                        <th>UserId</th>
                        <th>FullName</th>
                        <th>UserEmail</th>
                        <th>CivilIdNumber</th>
                        <th>CarLicense</th>
                        <th>Options</th>
                        <th align="right" width="80">&nbsp;</th>
                    </tr>
                </thead>
                <tbody id="managedUserDetails">
                    @foreach (var v in Model)
                    {
        <tr style="color:darkblue">
            <td>@v.UserId</td>  
            <td>@v.FullName</td>
            <td>@v.UserEmail</td>
            <td>@v.CivilIdNumber</td>
            <td>string.Join(",",@v.CarLicense)</td>
            <td>
                @*<div class="glyphicon-pencil">
            @Html.ActionLink("Edit", "Edit", new { id = v.UserId }) |
        </div>
        <div class="glyphicon glyphicon-trash">
            @Html.ActionLink("Delete", "Delete", new { id = v.UserId })
        </div>*@
                <a href="javascript:;" data-toggle="modal" data-target="#editUser" value="Add User" class="edit-cancel text-uppercase" onclick="EditAirport('@v.UserId,@v.FullName,@v.UserEmail,@v.CivilIdNumber,@v.CarLicense');">Edit</a>
                @Html.ActionLink(" ", "DisableSelectedUser", new { @v.UserId }, new { @class = "fa fa-close cancel no-margin", @onclick = "return confirm('Are you sure you wish to delete this record?');" })
            </td>
        </tr>
                    }
                </tbody>

            </table>
        </div>
            <br />
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
            Showing @Model.FirstItemOnPage to @Model.LastItemOnPage of @Model.TotalItemCount from Database
        </div>
    </div>
}